[tox]
envlist = py38
skipsdist = true
tox_pip_extensions_ext_venv_update = true

[testenv]
passenv = HOME SSH_AUTH_SOCK USER LANG PIP_INDEX_URL
basepython = python3.8
envdir = virtualenv_run
deps =
    -rrequirements.txt
    -rrequirements-dev.txt
commands =
    check-requirements -v
    mypy clusterman tests
    coverage erase
    coverage run -m pytest tests
    behave itests --no-source --no-timings --tags=-skip {posargs}
    coverage report --show-missing --skip-covered --fail-under=70
    pre-commit install -f --install-hooks
    pre-commit run --all-files

[testenv:external]
envdir = virtualenv_run
deps =
    {[testenv]deps}
    -eexamples/clusterman_metrics

[testenv:yelp]
envdir = virtualenv_run
deps =
    {[testenv]deps}
    -rextra-requirements-yelp.txt
    -rextra-requirements-yelp-dev.txt

[testenv:completions]
envdir = .tox/completions
usedevelop = true
deps =
    {[testenv]deps}
    -rextra-requirements-yelp.txt
    -rextra-requirements-yelp-dev.txt
commands =
	static_completion clusterman bash --write-vendor-directory completions
	static_completion clusterman zsh --write-vendor-directory completions
	static_completion clusterman fish --write-vendor-directory completions

[testenv:docs]
envdir = .tox/docs
deps =
    -rrequirements-doc.txt
changedir = docs
commands =
    sphinx-build -b html -d build/doctrees source build/html

[testenv:virtualenv_run-dev]
commands =

[testenv:virtualenv_run]
deps = -rrequirements.txt
usedevelop = false
commands =

[testenv:acceptance]
basepython = python3.8
envdir = .tox/acceptance
passenv = COMPOSE_PROJECT_NAME PIP_INDEX_URL
deps =
    docker-compose
    boto3
    simplejson
commands =
    docker-compose -f acceptance/docker-compose.yaml down
    docker-compose -f acceptance/docker-compose.yaml pull
    docker-compose -f acceptance/docker-compose.yaml build --build-arg DOCKER_REGISTRY={env:DOCKER_REGISTRY:docker-dev.yelpcorp.com} --build-arg IMAGE_NAME={env:BIONIC_IMAGE_NAME:bionic_pkgbuild}
    docker-compose -f acceptance/docker-compose.yaml up -d zookeeper mesosmaster mesosagent moto-ec2 moto-s3 moto-dynamodb moto-sts

[flake8]
exclude = .git,__pycache__,.tox,docs,virtualenv_run
filename = *.py,*.wsgi
max-line-length = 120
ignore = E121,E123,E126,E133,E203,E226,E231,E241,E242,E704,W503,W504,W505,W605

[pytest]
norecursedirs = .* docs virtualenv_run
filterwarnings =
    # ignore a bunch of noisy warnings that we can't do anything about
    ignore:invalid escape sequence:DeprecationWarning:.*(moto|boto|parsedatetime|samtranslator)

[pycodestyle]
ignore = E731
